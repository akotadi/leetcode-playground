import{C as v}from"./codemirror.es-Bh644rv_.js";import{i as h,G as u,a as E,b as T,s as C,N as b,E as I,v as D,K as P,p as S,c as N,C as Q,o as V}from"./index-DaBAitZE.js";import{R as $,P as f}from"./Range-CZNrBk8u.js";import"./codemirror.es2-CXusOVRv.js";function G(n){return{Field(a){const e=n.getFieldDef(),o=e==null?void 0:e.deprecationReason;if(e&&o!=null){const i=n.getParentType();i!=null||h(!1),n.reportError(new u(`The field ${i.name}.${e.name} is deprecated. ${o}`,{nodes:a}))}},Argument(a){const e=n.getArgument(),o=e==null?void 0:e.deprecationReason;if(e&&o!=null){const i=n.getDirective();if(i!=null)n.reportError(new u(`Directive "@${i.name}" argument "${e.name}" is deprecated. ${o}`,{nodes:a}));else{const t=n.getParentType(),s=n.getFieldDef();t!=null&&s!=null||h(!1),n.reportError(new u(`Field "${t.name}.${s.name}" argument "${e.name}" is deprecated. ${o}`,{nodes:a}))}}},ObjectField(a){const e=E(n.getParentInputType());if(T(e)){const o=e.getFields()[a.name.value],i=o==null?void 0:o.deprecationReason;i!=null&&n.reportError(new u(`The input field ${e.name}.${o.name} is deprecated. ${i}`,{nodes:a}))}},EnumValue(a){const e=n.getEnumValue(),o=e==null?void 0:e.deprecationReason;if(e&&o!=null){const i=E(n.getInputType());i!=null||h(!1),n.reportError(new u(`The enum value "${i.name}.${e.name}" is deprecated. ${o}`,{nodes:a}))}}}}function L(n,a,e,o,i){const t=C.filter(r=>!(r===b||r===I));return e&&Array.prototype.push.apply(t,e),D(n,a,t).filter(r=>{if(r.message.includes("Unknown directive")&&r.nodes){const l=r.nodes[0];if(l&&l.kind===P.DIRECTIVE){const c=l.name.value;if(c==="arguments"||c==="argumentDefinitions")return!1}}return!0})}const p={Error:"Error",Warning:"Warning",Information:"Information",Hint:"Hint"},y={[p.Error]:1,[p.Warning]:2,[p.Information]:3,[p.Hint]:4},m=(n,a)=>{if(!n)throw new Error(a)};function A(n,a=null,e,o,i){var t,s;let r=null,l="";i&&(l=typeof i=="string"?i:i.reduce((d,g)=>d+S(g)+`

`,""));const c=l?`${n}

${l}`:n;try{r=N(c)}catch(d){if(d instanceof u){const g=F((s=(t=d.locations)===null||t===void 0?void 0:t[0])!==null&&s!==void 0?s:{line:0,column:0},c);return[{severity:y.Error,message:d.message,source:"GraphQL: Syntax",range:g}]}throw d}return k(r,a,e)}function k(n,a=null,e,o){if(!a)return[];const i=L(a,n,e).flatMap(s=>R(s,y.Error,"Validation")),t=D(a,n,[G]).flatMap(s=>R(s,y.Warning,"Deprecation"));return i.concat(t)}function R(n,a,e){if(!n.nodes)return[];const o=[];for(const[i,t]of n.nodes.entries()){const s=t.kind!=="Variable"&&"name"in t&&t.name!==void 0?t.name:"variable"in t&&t.variable!==void 0?t.variable:t;if(s){m(n.locations,"GraphQL validation error requires locations.");const r=n.locations[i],l=M(s),c=r.column+(l.end-l.start);o.push({source:`GraphQL: ${e}`,message:n.message,severity:a,range:new $(new f(r.line-1,r.column-1),new f(r.line-1,c))})}}return o}function F(n,a){const e=V(),o=e.startState(),i=a.split(`
`);m(i.length>=n.line,"Query text must have more lines than where the error happened");let t=null;for(let c=0;c<n.line;c++)for(t=new Q(i[c]);!t.eol()&&e.token(t,o)!=="invalidchar";);m(t,"Expected Parser stream to be available.");const s=n.line-1,r=t.getStartOfToken(),l=t.getCurrentPosition();return new $(new f(s,r),new f(s,l))}function M(n){const e=n.loc;return m(e,"Expected ASTNode to have a location."),e}const w=["error","warning","information","hint"],W={"GraphQL: Validation":"validation","GraphQL: Deprecation":"deprecation","GraphQL: Syntax":"syntax"};v.registerHelper("lint","graphql",(n,a)=>{const{schema:e,validationRules:o,externalFragments:i}=a;return A(n,e,o,void 0,i).map(r=>({message:r.message,severity:r.severity?w[r.severity-1]:w[0],type:r.source?W[r.source]:void 0,from:v.Pos(r.range.start.line,r.range.start.character),to:v.Pos(r.range.end.line,r.range.end.character)}))});
